/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.AdministrativeRole;

import business.Enterprise.Enterprise;
import business.Network.Network;
import business.Person.Employee.Manager;
import business.Person.Hospital.Doctor;
import business.Person.Restaurant.RestaurantManager;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hao
 */
public class ManageOrganizationJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Network network;
    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageOrganizationJPanel(JPanel userProcessContainer, Enterprise enterprise, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.network = network;
        populateTable();
        jLabel_Enterprise.setText(enterprise.getName());
        jLabel_Network.setText(network.getNetworkName());
    }
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) managerJTable.getModel();
        model.setRowCount(0);
        switch (enterprise.getEnterpriseType()) {
            case DayCareInstitution:
                enterprise.getPersonDirectory().getPersonList().stream().filter((person) -> (person instanceof Manager)).map((person) -> {
                    Object[] row = new Object[3];
                    row[0] = person;
                    row[1] = person.getId();
                    row[2] = person.getGender();
            return row;
        }).forEach((row) -> {
            model.addRow(row);
        });
                break;
            case Hospital:
                enterprise.getPersonDirectory().getPersonList().stream().filter((person) -> (person instanceof Doctor)).map((person) -> {
                    Object[] row = new Object[3];
                    row[0] = person;
                    row[1] = person.getId();
                    row[2] = person.getGender();
            return row;
        }).forEach((row) -> {
            model.addRow(row);
        });
                break;
            case Restaurant:
                enterprise.getPersonDirectory().getPersonList().stream().filter((person) -> (person instanceof RestaurantManager)).map((person) -> {
                    Object[] row = new Object[3];
                    row[0] = person;
                    row[1] = person.getId();
                    row[2] = person.getGender();
            return row;
        }).forEach((row) -> {
            model.addRow(row);
        });
                break;
            default:
                break;
        }
    }
    
    private void repopulateTable(Network network){
        DefaultTableModel model = (DefaultTableModel) managerJTable.getModel();
        model.setRowCount(0);
        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            for(Enterprise.EnterpriseType type : Enterprise.EnterpriseType.values()){
                if(type.equals(Enterprise.EnterpriseType.DayCareInstitution)){
                    Object[] row = new Object[1];
                    row[0] = enterprise.getName();
                }
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JButton_AddManager = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        managerJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel_Network = new javax.swing.JLabel();
        jLabel_Enterprise = new javax.swing.JLabel();
        jButton_UpdateManager = new javax.swing.JButton();

        JButton_AddManager.setText("Add Manager");
        JButton_AddManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButton_AddManagerActionPerformed(evt);
            }
        });

        managerJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Manager Name", "User ID", "Date Of Birth"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(managerJTable);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Network:");

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setText("Enterprise:");

        jLabel_Network.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel_Network.setText("jLabel6");

        jLabel_Enterprise.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel_Enterprise.setText("jLabel7");

        jButton_UpdateManager.setText("Update Manager");
        jButton_UpdateManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UpdateManagerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backJButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JButton_AddManager)
                                .addGap(18, 18, 18)
                                .addComponent(jButton_UpdateManager))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel_Network, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel_Enterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel_Network))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel_Enterprise))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JButton_AddManager)
                    .addComponent(jButton_UpdateManager))
                .addGap(202, 202, 202)
                .addComponent(backJButton)
                .addGap(43, 43, 43))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void JButton_AddManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButton_AddManagerActionPerformed

        AddManagerJPanel addManagerJPanel = new AddManagerJPanel(userProcessContainer, enterprise, network);
        userProcessContainer.add("AddManagerJPanel", addManagerJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_JButton_AddManagerActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageEnterpriseJPanel sysAdminwjp = (ManageEnterpriseJPanel) component;
        sysAdminwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void jButton_UpdateManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UpdateManagerActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton_UpdateManagerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JButton_AddManager;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton jButton_UpdateManager;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_Enterprise;
    private javax.swing.JLabel jLabel_Network;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable managerJTable;
    // End of variables declaration//GEN-END:variables
}
